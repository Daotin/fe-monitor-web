{"version":3,"mappings":"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","names":["routes","__vitePreload","n","router","createRouter","createWebHashHistory","pinia","createPinia","Random","Mock","generateDates","days","dates","today","i","date","formatDate","options","result","limit","errorTypes","errorMessages","items","errorType","errorMessage","count","userCount","a","b","browsers","operatingSystems","deviceTypes","pageUrls","generateErrorMessage","generateErrorStack","url","stackFrames","stack","isMinified","fileName","_a","functionName","line","column","generateParsedStack","lines","parsedStack","match","generateBehaviorStack","behaviorTypes","stackSize","now","behaviors","type","timestamp","behavior","generateRrwebData","eventCount","events","generateErrorDetail","id","behaviorStack","rrwebData","generateErrorList","page","sortBy","firstSeen","lastSeen","sampleEventId","field","order","matches","errorId","metric","value","resourceUrlTemplates","tagNames","urlTemplate","hash","appId","fileCount","version","app","createApp","App","Monitor","key","component","ElementPlusIconsVue","ElementPlus"],"ignoreList":[],"sources":["../../../src/router/index.ts","../../../src/store/index.ts","../../../src/mock/dashboard.ts","../../../src/mock/error.ts","../../../src/mock/performance.ts","../../../src/mock/sourcemap.ts","../../../src/mock/index.ts","../../../src/main.ts"],"sourcesContent":["import { createRouter, createWebHistory, createWebHashHistory, type RouteRecordRaw } from 'vue-router'\n\n// 路由配置\nconst routes: Array<RouteRecordRaw> = [\n\t{\n\t\tpath: '/',\n\t\tredirect: '/dashboard',\n\t},\n\t{\n\t\tpath: '/',\n\t\tname: 'Layout',\n\t\tcomponent: () => import('../components/layout/Layout.vue'),\n\t\tchildren: [\n\t\t\t{\n\t\t\t\tpath: '/dashboard',\n\t\t\t\tname: 'Dashboard',\n\t\t\t\tcomponent: () => import('../views/dashboard/index.vue'),\n\t\t\t\tmeta: { title: '概览', icon: 'DataLine' },\n\t\t\t},\n\t\t\t{\n\t\t\t\tpath: '/error',\n\t\t\t\tname: 'Error',\n\t\t\t\tcomponent: () => import('../views/error/index.vue'),\n\t\t\t\tmeta: { title: '错误监控', icon: 'Warning' },\n\t\t\t},\n\t\t\t{\n\t\t\t\tpath: '/performance',\n\t\t\t\tname: 'Performance',\n\t\t\t\tcomponent: () => import('../views/performance/index.vue'),\n\t\t\t\tmeta: { title: '性能概览', icon: 'TrendCharts' },\n\t\t\t},\n\t\t\t{\n\t\t\t\tpath: '/sourcemap',\n\t\t\t\tname: 'Sourcemap',\n\t\t\t\tcomponent: () => import('../views/sourcemap/index.vue'),\n\t\t\t\tmeta: { title: 'SourceMap管理', icon: 'Upload' },\n\t\t\t},\n\t\t\t{\n\t\t\t\tpath: '/settings',\n\t\t\t\tname: 'Settings',\n\t\t\t\tcomponent: () => import('../views/settings/index.vue'),\n\t\t\t\tmeta: { title: '设置', icon: 'Setting' },\n\t\t\t},\n\t\t\t{\n\t\t\t\tpath: '/demo',\n\t\t\t\tname: 'Demo',\n\t\t\t\tcomponent: () => import('../views/demo/index.vue'),\n\t\t\t\tmeta: { title: '错误采集演示', icon: 'Monitor' },\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tpath: '/:pathMatch(.*)*',\n\t\tname: 'NotFound',\n\t\tcomponent: () => import('../views/404.vue'),\n\t},\n]\n\n// 创建路由实例\nconst router = createRouter({\n\thistory: createWebHashHistory(),\n\troutes,\n})\n\nexport default router\n","import { createPinia } from 'pinia';\n\nconst pinia = createPinia();\n\nexport default pinia;\n","import Mock from 'mockjs'\nimport { formatDate } from '../utils'\n\nconst Random = Mock.Random\n\n// 生成过去n天的日期数组\nconst generateDates = (days: number): string[] => {\n\tconst dates: string[] = []\n\tconst today = new Date()\n\n\tfor (let i = days - 1; i >= 0; i--) {\n\t\tconst date = new Date()\n\t\tdate.setDate(today.getDate() - i)\n\t\tdates.push(formatDate(date, 'YYYY-MM-DD'))\n\t}\n\n\treturn dates\n}\n\n// 模拟核心统计指标数据\nMock.mock(/\\/api\\/v1\\/stats\\/summarize/, 'get', (options: any) => {\n\tconsole.log('Mock: 请求核心统计指标', options)\n\n\treturn {\n\t\tpvCount: Random.integer(5000, 50000),\n\t\tuvCount: Random.integer(1000, 10000),\n\t\tjsErrorCount: Random.integer(50, 500),\n\t\tlcpAvg: Random.float(1000, 3000, 0, 2),\n\t}\n})\n\n// 模拟JS错误趋势数据\nMock.mock(/\\/api\\/v1\\/stats\\/error-trend/, 'get', (options: any) => {\n\tconsole.log('Mock: 请求JS错误趋势数据', options)\n\n\t// 解析请求体中的参数\n\tlet days = 7\n\n\t// 根据时间范围决定生成多少天的数据\n\t// 在真实场景中应该使用startTime和endTime计算\n\tconst dates = generateDates(days)\n\n\t// 生成每天的错误数量\n\tconst result = dates.map(date => ({\n\t\tdate,\n\t\tcount: Random.integer(5, 100),\n\t}))\n\n\tconsole.log('Mock error-trend 返回数据:', result)\n\n\treturn result\n})\n\n// 模拟Top 5 JS错误列表数据\nMock.mock(/\\/api\\/v1\\/stats\\/errors/, 'get', (options: any) => {\n\tconsole.log('Mock: 请求JS错误列表数据', options)\n\n\t// 解析请求参数\n\tconst limit = 5 // 默认取前5条\n\n\tconst errorTypes = ['TypeError', 'ReferenceError', 'SyntaxError', 'RangeError', 'URIError']\n\n\tconst errorMessages = [\n\t\t'Cannot read property of undefined',\n\t\t'Object is not a function',\n\t\t'Unexpected token',\n\t\t'Maximum call stack size exceeded',\n\t\t'Invalid regular expression',\n\t\t'Failed to fetch',\n\t\t'Network error',\n\t\t'Script error',\n\t\t'Out of memory',\n\t\t'Uncaught exception',\n\t]\n\n\tconst items = Array.from({ length: limit }, () => {\n\t\tconst errorType = Random.pick(errorTypes)\n\t\tconst errorMessage = Random.pick(errorMessages)\n\t\tconst count = Random.integer(10, 1000)\n\t\tconst userCount = Random.integer(5, Math.min(count, 500))\n\n\t\treturn {\n\t\t\tfingerprint: Random.guid(),\n\t\t\tmessage: `${errorType}: ${errorMessage}`,\n\t\t\ttype: errorType,\n\t\t\tcount,\n\t\t\tuserCount,\n\t\t\tfirstSeen: formatDate(Random.date('yyyy-MM-dd'), 'YYYY-MM-DD HH:mm:ss'),\n\t\t\tlastSeen: formatDate(Random.date('yyyy-MM-dd'), 'YYYY-MM-DD HH:mm:ss'),\n\t\t\tsampleEventId: Random.guid(),\n\t\t}\n\t})\n\n\t// 按count降序排序\n\titems.sort((a, b) => b.count - a.count)\n\n\treturn {\n\t\titems,\n\t\ttotal: Random.integer(items.length, 100),\n\t}\n})\n","import Mock from 'mockjs'\nimport { formatDate } from '../utils'\n\nconst Random = Mock.Random\n\n// 错误类型列表\nconst errorTypes = [\n\t'TypeError',\n\t'ReferenceError',\n\t'SyntaxError',\n\t'RangeError',\n\t'URIError',\n\t'EvalError',\n\t'InternalError',\n]\n\n// 错误消息模板\nconst errorMessages = [\n\t\"Cannot read property '{{property}}' of {{value}}\",\n\t'{{variable}} is not defined',\n\t'Unexpected token {{token}}',\n\t'Maximum call stack size exceeded',\n\t'Invalid regular expression: /{{regex}}/',\n\t'Failed to fetch resource: {{url}}',\n\t'Network error when attempting to fetch resource',\n\t'Script error',\n\t'Out of memory',\n\t'Uncaught exception: {{message}}',\n\t'The operation is insecure',\n\t'Permission denied to access property \"{{property}}\"',\n\t'The operation is not supported',\n\t'Invalid argument',\n\t\"Object doesn't support property or method '{{method}}'\",\n]\n\n// 浏览器列表\nconst browsers = ['Chrome', 'Firefox', 'Safari', 'Edge', 'IE', 'Opera']\n\n// 操作系统列表\nconst operatingSystems = ['Windows', 'MacOS', 'Linux', 'iOS', 'Android']\n\n// 设备类型列表\nconst deviceTypes = ['Desktop', 'Mobile', 'Tablet']\n\n// 页面URL列表\nconst pageUrls = [\n\t'https://example.com/',\n\t'https://example.com/login',\n\t'https://example.com/dashboard',\n\t'https://example.com/profile',\n\t'https://example.com/settings',\n\t'https://example.com/products',\n\t'https://example.com/cart',\n\t'https://example.com/checkout',\n]\n\n// 生成随机错误消息\nconst generateErrorMessage = () => {\n\tconst template = Random.pick(errorMessages)\n\treturn template\n\t\t.replace('{{property}}', Random.word())\n\t\t.replace('{{value}}', Random.pick(['undefined', 'null', 'NaN', '{}', '[]']))\n\t\t.replace('{{variable}}', Random.word())\n\t\t.replace('{{token}}', Random.pick([')', '}', ']', ',', '.', ':', ';']))\n\t\t.replace('{{regex}}', Random.pick(['[', '(', '*', '+', '?', '{']))\n\t\t.replace('{{url}}', Random.url())\n\t\t.replace('{{message}}', Random.sentence(3, 8))\n\t\t.replace('{{method}}', Random.word())\n}\n\n// 生成随机错误堆栈\nconst generateErrorStack = (errorType: string, errorMessage: string, url: string) => {\n\tconst stackFrames = Random.integer(3, 8)\n\tlet stack = `${errorType}: ${errorMessage}\\n`\n\n\tfor (let i = 0; i < stackFrames; i++) {\n\t\tconst isMinified = i === 0 ? false : Random.boolean()\n\t\tconst fileName = isMinified ? `${url.split('/').pop()?.split('.')[0]}.min.js` : `${Random.word()}.js`\n\t\tconst functionName = isMinified ? Random.string('lower', 1, 3) : Random.word(3, 10)\n\t\tconst line = Random.integer(1, 5000)\n\t\tconst column = Random.integer(1, 500)\n\n\t\tstack += `    at ${functionName} (${url.replace(/\\/$/, '')}/${fileName}:${line}:${column})\\n`\n\t}\n\n\treturn stack\n}\n\n// 生成解析后的堆栈信息\nconst generateParsedStack = (stack: string) => {\n\tconst lines = stack.split('\\n')\n\tconst parsedStack = []\n\n\t// 跳过第一行（错误消息）\n\tfor (let i = 1; i < lines.length; i++) {\n\t\tconst line = lines[i].trim()\n\t\tif (!line) continue\n\n\t\t// 解析堆栈行\n\t\tconst match = line.match(/at\\s+(.*?)\\s+\\((.*?):(\\d+):(\\d+)\\)/)\n\t\tif (match) {\n\t\t\tparsedStack.push({\n\t\t\t\tfunc: match[1],\n\t\t\t\tfile: match[2],\n\t\t\t\tline: parseInt(match[3]),\n\t\t\t\tcolumn: parseInt(match[4]),\n\t\t\t})\n\t\t}\n\t}\n\n\treturn parsedStack\n}\n\n// 生成用户行为栈\nconst generateBehaviorStack = () => {\n\tconst behaviorTypes = ['click', 'input', 'navigation', 'api', 'pageview', 'scroll', 'resize', 'keypress']\n\n\tconst stackSize = Random.integer(5, 15)\n\tconst now = new Date().getTime()\n\tconst behaviors = []\n\n\tfor (let i = 0; i < stackSize; i++) {\n\t\tconst type = Random.pick(behaviorTypes)\n\t\tconst timestamp = now - (stackSize - i) * Random.integer(1000, 5000)\n\n\t\tlet behavior: any = {\n\t\t\ttype,\n\t\t\ttimestamp,\n\t\t}\n\n\t\tswitch (type) {\n\t\t\tcase 'click':\n\t\t\t\tbehavior.element = Random.pick(['button', 'a', 'div', 'span', 'img'])\n\t\t\t\tbehavior.text = Random.sentence(1, 3)\n\t\t\t\tbehavior.position = { x: Random.integer(0, 1000), y: Random.integer(0, 800) }\n\t\t\t\tbreak\n\t\t\tcase 'input':\n\t\t\t\tbehavior.element = 'input'\n\t\t\t\tbehavior.value = '[MASKED]' // 敏感信息已脱敏\n\t\t\t\tbreak\n\t\t\tcase 'navigation':\n\t\t\t\tbehavior.from = Random.pick(pageUrls)\n\t\t\t\tbehavior.to = Random.pick(pageUrls)\n\t\t\t\tbreak\n\t\t\tcase 'api':\n\t\t\t\tbehavior.method = Random.pick(['GET', 'POST', 'PUT', 'DELETE'])\n\t\t\t\tbehavior.url = `/api/${Random.word()}`\n\t\t\t\tbehavior.status = Random.pick([200, 201, 400, 401, 403, 404, 500])\n\t\t\t\tbreak\n\t\t\tcase 'pageview':\n\t\t\t\tbehavior.url = Random.pick(pageUrls)\n\t\t\t\tbehavior.title = Random.sentence(2, 5)\n\t\t\t\tbreak\n\t\t\tcase 'scroll':\n\t\t\t\tbehavior.position = { x: Random.integer(0, 100), y: Random.integer(0, 1000) }\n\t\t\t\tbreak\n\t\t}\n\n\t\tbehaviors.push(behavior)\n\t}\n\n\treturn behaviors\n}\n\n// 生成rrweb录屏数据（简化版，实际数据结构更复杂）\nconst generateRrwebData = () => {\n\tconst eventCount = Random.integer(50, 200)\n\tconst now = new Date().getTime()\n\tconst events = []\n\n\tfor (let i = 0; i < eventCount; i++) {\n\t\tconst timestamp = now - (eventCount - i) * Random.integer(50, 200)\n\n\t\t// 这里只是模拟rrweb数据结构，实际数据更复杂\n\t\tevents.push({\n\t\t\ttype: Random.integer(0, 5),\n\t\t\tdata: {},\n\t\t\ttimestamp,\n\t\t})\n\t}\n\n\treturn events\n}\n\n// 生成错误详情数据\nconst generateErrorDetail = (id: string) => {\n\tconst errorType = Random.pick(errorTypes)\n\tconst errorMessage = generateErrorMessage()\n\tconst url = Random.pick(pageUrls)\n\tconst stack = generateErrorStack(errorType, errorMessage, url)\n\tconst parsedStack = generateParsedStack(stack)\n\t// const parsedStack = []\n\tconst behaviorStack = generateBehaviorStack()\n\tconst rrwebData = Random.boolean(0.7) ? generateRrwebData() : undefined // 70%的概率有录屏数据\n\n\treturn {\n\t\tid,\n\t\tappId: 'demo-app',\n\t\tuserId: `user-${Random.integer(1000, 9999)}`,\n\t\ttype: 'error',\n\t\tsubType: 'jsError',\n\t\ttimestamp: formatDate(Random.date('yyyy-MM-dd HH:mm:ss'), 'YYYY-MM-DD HH:mm:ss'),\n\t\tpayload: {\n\t\t\tmessage: errorMessage,\n\t\t\tstack,\n\t\t\tparsedStack,\n\t\t\tmeta: {\n\t\t\t\turl,\n\t\t\t\tbrowser: `${Random.pick(browsers)} ${Random.integer(70, 120)}`,\n\t\t\t\tos: `${Random.pick(operatingSystems)} ${Random.integer(10, 15)}.${Random.integer(0, 9)}`,\n\t\t\t\tdevice: Random.pick(deviceTypes),\n\t\t\t\tscreenSize: `${Random.integer(1024, 3840)}x${Random.integer(768, 2160)}`,\n\t\t\t\tlanguage: Random.pick(['en-US', 'zh-CN', 'es-ES', 'fr-FR', 'de-DE']),\n\t\t\t\tuserAgent: Random.sentence(10, 20),\n\t\t\t},\n\t\t\tbehaviorStack,\n\t\t\trrwebData,\n\t\t},\n\t\tcreatedAt: formatDate(Random.date('yyyy-MM-dd HH:mm:ss'), 'YYYY-MM-DD HH:mm:ss'),\n\t}\n}\n\n// 生成错误列表数据\nconst generateErrorList = (page: number, limit: number, sortBy: string) => {\n\tconst total = 100 // 总错误数\n\tconst items = []\n\n\tfor (let i = 0; i < limit; i++) {\n\t\tconst index = (page - 1) * limit + i\n\t\tif (index >= total) break\n\n\t\tconst errorType = Random.pick(errorTypes)\n\t\tconst errorMessage = generateErrorMessage()\n\t\tconst count = Random.integer(10, 1000)\n\t\tconst userCount = Random.integer(5, Math.min(count, 500))\n\t\tconst firstSeen = formatDate(Random.date('yyyy-MM-dd'), 'YYYY-MM-DD HH:mm:ss')\n\t\tconst lastSeen = formatDate(Random.date('yyyy-MM-dd'), 'YYYY-MM-DD HH:mm:ss')\n\t\tconst sampleEventId = Random.guid()\n\n\t\titems.push({\n\t\t\tfingerprint: Random.guid(),\n\t\t\tmessage: `${errorType}: ${errorMessage}`,\n\t\t\ttype: errorType,\n\t\t\tcount,\n\t\t\tuserCount,\n\t\t\tfirstSeen,\n\t\t\tlastSeen,\n\t\t\tsampleEventId,\n\t\t})\n\t}\n\n\t// 根据排序参数排序\n\tif (sortBy) {\n\t\tconst [field, order] = sortBy.split('_')\n\t\titems.sort((a: any, b: any) => {\n\t\t\tlet result = 0\n\n\t\t\tswitch (field) {\n\t\t\t\tcase 'count':\n\t\t\t\t\tresult = a.count - b.count\n\t\t\t\t\tbreak\n\t\t\t\tcase 'userCount':\n\t\t\t\t\tresult = a.userCount - b.userCount\n\t\t\t\t\tbreak\n\t\t\t\tcase 'firstSeen':\n\t\t\t\t\tresult = new Date(a.firstSeen).getTime() - new Date(b.firstSeen).getTime()\n\t\t\t\t\tbreak\n\t\t\t\tcase 'lastSeen':\n\t\t\t\t\tresult = new Date(a.lastSeen).getTime() - new Date(b.lastSeen).getTime()\n\t\t\t\t\tbreak\n\t\t\t}\n\n\t\t\treturn order === 'desc' ? -result : result\n\t\t})\n\t}\n\n\treturn {\n\t\titems,\n\t\ttotal,\n\t\tpage,\n\t\tlimit,\n\t}\n}\n\n// 模拟错误列表接口\nMock.mock(/\\/api\\/v1\\/stats\\/errors/, 'get', (options: any) => {\n\tconsole.log('Mock: 请求JS错误列表数据', options)\n\n\t// 解析URL参数\n\tconst url = new URL(options.url, 'http://localhost')\n\tconst page = parseInt(url.searchParams.get('page') || '1')\n\tconst limit = parseInt(url.searchParams.get('limit') || '20')\n\tconst sortBy = url.searchParams.get('sortBy') || 'lastSeen_desc'\n\n\tconst result = generateErrorList(page, limit, sortBy)\n\tconsole.log(`Mock: 返回${result.items.length}条错误数据，总数${result.total}`)\n\n\treturn result\n})\n\n// 模拟错误详情接口\nMock.mock(/\\/api\\/v1\\/events\\/.*/, 'get', (options: any) => {\n\tconsole.log('Mock: 请求错误详情数据', options)\n\n\t// 从URL中提取错误ID\n\tconst matches = options.url.match(/\\/events\\/([^/?]+)/)\n\tconst errorId = matches ? matches[1] : 'unknown'\n\n\tconst result = generateErrorDetail(errorId)\n\tconsole.log('Mock: 返回错误详情数据', errorId)\n\n\treturn result\n})\n","import Mock from 'mockjs'\nimport { formatDate } from '../utils'\n\nconst Random = Mock.Random\n\n// 模拟核心Web Vitals性能指标概览\nMock.mock(/\\/api\\/v1\\/performance\\/summary/, 'get', (options: any) => {\n\tconsole.log('Mock: 请求性能指标概览数据', options)\n\n\treturn {\n\t\tlcp: {\n\t\t\tavg: Random.float(1500, 3000, 0, 2),\n\t\t\tp75: Random.float(2000, 4000, 0, 2),\n\t\t},\n\t\tfcp: {\n\t\t\tavg: Random.float(500, 1500, 0, 2),\n\t\t\tp75: Random.float(800, 2000, 0, 2),\n\t\t},\n\t}\n})\n\n// 模拟慢页面列表数据\nMock.mock(/\\/api\\/v1\\/performance\\/slow-pages/, 'get', (options: any) => {\n\tconsole.log('Mock: 请求慢页面列表数据', options)\n\n\t// 解析URL参数\n\tconst url = new URL(options.url, 'http://localhost')\n\tconst metric = url.searchParams.get('metric') || 'lcp'\n\tconst limit = parseInt(url.searchParams.get('limit') || '5')\n\n\t// 页面URL列表\n\tconst pageUrls = [\n\t\t'/user/profile',\n\t\t'/product/detail/123',\n\t\t'/checkout',\n\t\t'/cart',\n\t\t'/search?q=product',\n\t\t'/category/electronics',\n\t\t'/blog/article/10',\n\t\t'/account/settings',\n\t\t'/order/history',\n\t\t'/wishlist',\n\t]\n\n\t// 生成慢页面数据\n\tconst result = []\n\tfor (let i = 0; i < limit; i++) {\n\t\tconst url = pageUrls[i % pageUrls.length]\n\t\tlet value\n\t\t\n\t\tif (metric === 'lcp') {\n\t\t\tvalue = Random.float(2000, 6000, 0, 2)\n\t\t} else {\n\t\t\tvalue = Random.float(800, 3000, 0, 2)\n\t\t}\n\t\t\n\t\tresult.push({\n\t\t\turl,\n\t\t\tvalue,\n\t\t})\n\t}\n\n\t// 按性能指标值降序排序（值越大表示越慢）\n\tresult.sort((a, b) => b.value - a.value)\n\n\treturn result\n})\n\n// 模拟资源加载错误列表数据\nMock.mock(/\\/api\\/v1\\/performance\\/resource-errors/, 'get', (options: any) => {\n\tconsole.log('Mock: 请求资源加载错误列表数据', options)\n\n\t// 解析URL参数\n\tconst url = new URL(options.url, 'http://localhost')\n\tconst limit = parseInt(url.searchParams.get('limit') || '20')\n\n\t// 资源URL模板\n\tconst resourceUrlTemplates = [\n\t\t'https://cdn.example.com/js/main.{hash}.js',\n\t\t'https://cdn.example.com/css/styles.{hash}.css',\n\t\t'https://cdn.example.com/images/banner.{hash}.png',\n\t\t'https://api.example.com/data',\n\t\t'https://fonts.googleapis.com/css?family=Roboto',\n\t\t'https://analytics.example.com/tracker.js',\n\t\t'https://maps.example.com/api.js',\n\t\t'https://video.example.com/player.js',\n\t\t'https://ads.example.com/display.js',\n\t\t'https://cdn.example.com/vendor.{hash}.js',\n\t]\n\n\t// 错误类型\n\tconst errorTypes = [\n\t\t'404 Not Found',\n\t\t'net::ERR_CONNECTION_REFUSED',\n\t\t'net::ERR_CONNECTION_TIMED_OUT',\n\t\t'net::ERR_NAME_NOT_RESOLVED',\n\t\t'net::ERR_ABORTED',\n\t\t'net::ERR_INTERNET_DISCONNECTED',\n\t\t'net::ERR_CERT_COMMON_NAME_INVALID',\n\t\t'net::ERR_FAILED',\n\t]\n\n\t// 标签类型\n\tconst tagNames = ['script', 'link', 'img', 'video', 'audio', 'iframe']\n\n\t// 生成资源错误数据\n\tconst result = []\n\tfor (let i = 0; i < limit; i++) {\n\t\tconst urlTemplate = Random.pick(resourceUrlTemplates)\n\t\tconst hash = Random.string('lower', 8)\n\t\tconst url = urlTemplate.replace('{hash}', hash)\n\t\t\n\t\tresult.push({\n\t\t\teventId: Random.guid(),\n\t\t\turl,\n\t\t\ttype: Random.pick(errorTypes),\n\t\t\ttagName: Random.pick(tagNames),\n\t\t\tstatus: Random.boolean(0.7) ? Random.pick([404, 500, 502, 503]) : null, // 70%概率有状态码\n\t\t\ttimestamp: formatDate(Random.date('yyyy-MM-dd HH:mm:ss'), 'YYYY-MM-DD HH:mm:ss'),\n\t\t})\n\t}\n\n\treturn result\n})\n","import Mock from 'mockjs'\nimport { formatDate } from '../utils'\n\nconst Random = Mock.Random\n\n// 模拟已上传的SourceMap文件列表\nMock.mock(/\\/api\\/v1\\/sourcemaps/, 'get', (options: any) => {\n\tconsole.log('Mock: 请求SourceMap文件列表', options)\n\n\t// 解析URL参数\n\tconst url = new URL(options.url, 'http://localhost')\n\tconst appId = url.searchParams.get('appId') || 'demo-app'\n\n\t// 生成随机文件列表\n\tconst fileCount = Random.integer(3, 10)\n\tconst result = []\n\n\tfor (let i = 0; i < fileCount; i++) {\n\t\tconst version = `${Random.integer(1, 9)}.${Random.integer(0, 9)}.${Random.integer(0, 9)}`\n\t\tconst hash = Random.string('lower', 8)\n\t\t\n\t\tresult.push({\n\t\t\tid: Random.guid(),\n\t\t\tappId,\n\t\t\tfileName: `main.${hash}.js.map`,\n\t\t\toriginalFileName: `main.${hash}.js`,\n\t\t\tversion,\n\t\t\tsize: Random.integer(500000, 5000000), // 文件大小(字节)\n\t\t\tuploadTime: formatDate(Random.date('yyyy-MM-dd HH:mm:ss'), 'YYYY-MM-DD HH:mm:ss'),\n\t\t\tstatus: Random.pick(['active', 'inactive']),\n\t\t})\n\t}\n\n\t// 按上传时间降序排序\n\tresult.sort((a, b) => new Date(b.uploadTime).getTime() - new Date(a.uploadTime).getTime())\n\n\treturn result\n})\n\n// 模拟上传SourceMap文件\nMock.mock(/\\/api\\/v1\\/sourcemaps\\/upload/, 'post', (options: any) => {\n\tconsole.log('Mock: 上传SourceMap文件', options)\n\n\t// 模拟上传成功\n\treturn {\n\t\tsuccess: true,\n\t\tid: Random.guid(),\n\t\tfileName: options.body ? JSON.parse(options.body).fileName || 'unknown.js.map' : 'unknown.js.map',\n\t\tuploadTime: formatDate(new Date(), 'YYYY-MM-DD HH:mm:ss'),\n\t}\n})\n\n// 模拟删除SourceMap文件\nMock.mock(/\\/api\\/v1\\/sourcemaps\\/\\w+/, 'delete', (options: any) => {\n\tconsole.log('Mock: 删除SourceMap文件', options)\n\n\t// 从URL中提取文件ID\n\tconst matches = options.url.match(/\\/sourcemaps\\/([^/?]+)/)\n\tconst fileId = matches ? matches[1] : 'unknown'\n\n\t// 模拟删除成功\n\treturn {\n\t\tsuccess: true,\n\t\tid: fileId,\n\t}\n})\n","import Mock from 'mockjs'\nimport './dashboard'\nimport './error'\nimport './performance'\nimport './sourcemap'\n\n// 设置延迟时间，模拟网络请求\nMock.setup({\n\ttimeout: '300-600',\n})\n\nconsole.log('Mock服务已启动')\n","import { createApp } from 'vue'\nimport { createPinia } from 'pinia'\nimport ElementPlus from 'element-plus'\nimport * as ElementPlusIconsVue from '@element-plus/icons-vue'\nimport router from './router'\nimport pinia from './store'\nimport App from './App.vue'\n// import Monitor from 'D:/Gitee/fe-monitor-sdk/src/index.js'\nimport Monitor from 'dt-monitor-sdk'\nimport './style.css'\nimport 'element-plus/dist/index.css'\nimport * as Vue from 'vue' // 导入整个Vue模块\n// 导入Mock服务\nimport './mock'\n\nconst app = createApp(App)\n\nwindow.monitor = new Monitor({\n\tappId: 'your-app-id',\n\tuserId: 'daotin',\n\treportUrl: 'https://your-server.com/report',\n\tplugins: ['jsError', 'resourceError', 'frameworkError', 'httpError', 'behaviorStack', 'pageChange', 'click', 'rrweb'],\n\tsampling: 1, // 100% 采样率\n\tmaxQueueSize: 100,\n\tpluginsConfig: {\n\t\t// 框架错误插件配置\n\t\tframeworkError: {\n\t\t\tVue: app,\n\t\t\tversion: 3,\n\t\t},\n\t\t// rrweb 插件配置\n\t\trrweb: {\n\t\t\trecordMode: 'error', // 仅在错误发生时上报录屏\n\t\t\tmaxRecordingTime: 30000, // 最大录制时长(毫秒)\n\t\t\tmaskAllInputs: true, // 遮罩所有输入框内容\n\t\t},\n\t\t// // 行为栈插件配置\n\t\tbehaviorStack: {\n\t\t\tmaxStackSize: 10, // 行为栈最大长度\n\t\t\treportWithError: true, // 在错误发生时上报行为栈\n\t\t},\n\t},\n})\nwindow.monitor.init()\n\n// 注册Element Plus图标\nfor (const [key, component] of Object.entries(ElementPlusIconsVue)) {\n\tapp.component(key, component)\n}\n\n// 使用插件\napp.use(ElementPlus)\napp.use(router)\napp.use(pinia)\n\n// 挂载应用\napp.mount('#app')\n\nconsole.log('前端监控数据大屏应用已启动')\n"],"file":"assets/js/index-NbCe1alw.js"}