{"version":3,"file":"index-BqxRloyz.js","sources":["../../../src/components/performance/PerformanceMetricCard.vue","../../../src/components/performance/SlowPagesList.vue","../../../src/components/performance/ResourceErrorsList.vue","../../../src/views/performance/index.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport { formatPerformanceTime } from '../../utils'\n\ninterface Props {\n  title: string\n  avgValue: number\n  p75Value: number\n  icon?: string\n  color?: string\n  loading?: boolean\n  threshold?: {\n    good: number\n    needsImprovement: number\n  }\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  icon: 'Timer',\n  color: '#409EFF',\n  loading: false,\n  threshold: () => ({\n    good: 1000,\n    needsImprovement: 2500\n  })\n})\n\n// 格式化显示值\nconst formatValue = (value: number) => {\n  return formatPerformanceTime(value)\n}\n\n// 根据阈值判断性能状态\nconst getStatusColor = (value: number) => {\n  if (value <= props.threshold.good) {\n    return '#67C23A' // 绿色 - 良好\n  } else if (value <= props.threshold.needsImprovement) {\n    return '#E6A23C' // 黄色 - 需要改进\n  } else {\n    return '#F56C6C' // 红色 - 较差\n  }\n}\n\nconst avgStatusColor = computed(() => getStatusColor(props.avgValue))\nconst p75StatusColor = computed(() => getStatusColor(props.p75Value))\n</script>\n\n<template>\n  <el-card class=\"metric-card\" :body-style=\"{ padding: '15px' }\">\n    <div class=\"card-header\">\n      <div class=\"title\">\n        <el-icon :size=\"20\" :color=\"color\">\n          <component :is=\"icon\" />\n        </el-icon>\n        <span>{{ title }}</span>\n      </div>\n    </div>\n    \n    <div v-if=\"loading\" class=\"loading-container\">\n      <el-skeleton animated :rows=\"2\" />\n    </div>\n    \n    <div v-else class=\"metrics-container\">\n      <div class=\"metric-item\">\n        <div class=\"metric-label\">平均值</div>\n        <div class=\"metric-value\" :style=\"{ color: avgStatusColor }\">\n          {{ formatValue(avgValue) }}\n        </div>\n      </div>\n      \n      <div class=\"metric-item\">\n        <div class=\"metric-label\">P75</div>\n        <div class=\"metric-value\" :style=\"{ color: p75StatusColor }\">\n          {{ formatValue(p75Value) }}\n        </div>\n      </div>\n    </div>\n  </el-card>\n</template>\n\n<style scoped lang=\"less\">\n.metric-card {\n  height: 100%;\n  transition: all 0.3s;\n  \n  &:hover {\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n    transform: translateY(-2px);\n  }\n  \n  .card-header {\n    margin-bottom: 15px;\n    \n    .title {\n      display: flex;\n      align-items: center;\n      gap: 8px;\n      font-size: 16px;\n      font-weight: 600;\n      color: #303133;\n    }\n  }\n  \n  .loading-container {\n    min-height: 80px;\n    display: flex;\n    align-items: center;\n  }\n  \n  .metrics-container {\n    display: flex;\n    justify-content: space-between;\n    \n    .metric-item {\n      text-align: center;\n      flex: 1;\n      \n      .metric-label {\n        font-size: 14px;\n        color: #909399;\n        margin-bottom: 5px;\n      }\n      \n      .metric-value {\n        font-size: 22px;\n        font-weight: 600;\n      }\n    }\n  }\n}\n</style>\n","<script setup lang=\"ts\">\nimport { ref, computed } from 'vue'\nimport { formatPerformanceTime } from '../../utils'\nimport type { SlowPage } from '../../api'\n\ninterface Props {\n\tdata: SlowPage[]\n\tloading: boolean\n\tmetric: string\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n\tdata: () => [],\n\tloading: false,\n\tmetric: 'lcp',\n})\n\n// 定义emit事件\nconst emit = defineEmits<{\n\t(e: 'update:metric', value: string): void\n}>()\n\n// 指标名称映射\nconst metricNames = {\n\tlcp: 'LCP (最大内容绘制)',\n\tfcp: 'FCP (首次内容绘制)',\n}\n\n// 计算当前指标名称\nconst currentMetricName = computed(() => {\n\treturn metricNames[props.metric as keyof typeof metricNames] || props.metric.toUpperCase()\n})\n\n// 根据性能值获取状态颜色\nconst getStatusColor = (value: number, metric: string) => {\n\t// 根据不同指标设置不同的阈值\n\tconst thresholds = {\n\t\tlcp: { good: 2500, needsImprovement: 4000 },\n\t\tfcp: { good: 1000, needsImprovement: 2500 },\n\t}\n\n\tconst threshold = thresholds[metric as keyof typeof thresholds] || thresholds.lcp\n\n\tif (value <= threshold.good) {\n\t\treturn '#67C23A' // 绿色 - 良好\n\t} else if (value <= threshold.needsImprovement) {\n\t\treturn '#E6A23C' // 黄色 - 需要改进\n\t} else {\n\t\treturn '#F56C6C' // 红色 - 较差\n\t}\n}\n\n// 格式化URL显示\nconst formatUrl = (url: string) => {\n\t// 如果URL过长，截断显示\n\tconst maxLength = 40\n\tif (url.length > maxLength) {\n\t\treturn url.substring(0, maxLength) + '...'\n\t}\n\treturn url\n}\n</script>\n\n<template>\n\t<el-card class=\"slow-pages-card\">\n\t\t<template #header>\n\t\t\t<div class=\"card-header\">\n\t\t\t\t<span class=\"title\">Top 5 慢页面</span>\n\t\t\t\t<el-radio-group\n\t\t\t\t\t:model-value=\"props.metric\"\n\t\t\t\t\t@update:model-value=\"val => emit('update:metric', val)\"\n\t\t\t\t\tsize=\"small\">\n\t\t\t\t\t<el-radio-button label=\"lcp\">LCP</el-radio-button>\n\t\t\t\t\t<el-radio-button label=\"fcp\">FCP</el-radio-button>\n\t\t\t\t</el-radio-group>\n\t\t\t</div>\n\t\t</template>\n\n\t\t<div v-if=\"loading\" class=\"loading-container\">\n\t\t\t<el-skeleton animated :rows=\"5\" />\n\t\t</div>\n\n\t\t<div v-else-if=\"data.length === 0\" class=\"empty-container\">\n\t\t\t<el-empty description=\"暂无数据\" :image-size=\"80\" />\n\t\t</div>\n\n\t\t<div v-else class=\"pages-list\">\n\t\t\t<div class=\"list-header\">\n\t\t\t\t<span class=\"url-header\">页面URL</span>\n\t\t\t\t<span class=\"value-header\">{{ currentMetricName }}</span>\n\t\t\t</div>\n\n\t\t\t<div v-for=\"(page, index) in data\" :key=\"index\" class=\"page-item\">\n\t\t\t\t<div class=\"page-url\" :title=\"page.url\">{{ formatUrl(page.url) }}</div>\n\t\t\t\t<div class=\"page-value\" :style=\"{ color: getStatusColor(page.value, props.metric) }\">\n\t\t\t\t\t{{ formatPerformanceTime(page.value) }}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</el-card>\n</template>\n\n<style scoped lang=\"less\">\n.slow-pages-card {\n\theight: 100%;\n\n\t.card-header {\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\talign-items: center;\n\n\t\t.title {\n\t\t\tfont-size: 16px;\n\t\t\tfont-weight: 600;\n\t\t}\n\t}\n\n\t.loading-container,\n\t.empty-container {\n\t\tmin-height: 250px;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t}\n\n\t.pages-list {\n\t\t.list-header {\n\t\t\tdisplay: flex;\n\t\t\tjustify-content: space-between;\n\t\t\tpadding: 0 10px 10px;\n\t\t\tmargin-bottom: 10px;\n\t\t\tborder-bottom: 1px solid #ebeef5;\n\t\t\tfont-weight: 600;\n\t\t\tcolor: #606266;\n\n\t\t\t.url-header {\n\t\t\t\tflex: 1;\n\t\t\t}\n\n\t\t\t.value-header {\n\t\t\t\twidth: 120px;\n\t\t\t\ttext-align: right;\n\t\t\t}\n\t\t}\n\n\t\t.page-item {\n\t\t\tdisplay: flex;\n\t\t\tjustify-content: space-between;\n\t\t\talign-items: center;\n\t\t\tpadding: 12px 10px;\n\t\t\tborder-bottom: 1px solid #ebeef5;\n\n\t\t\t&:last-child {\n\t\t\t\tborder-bottom: none;\n\t\t\t}\n\n\t\t\t&:hover {\n\t\t\t\tbackground-color: #f5f7fa;\n\t\t\t}\n\n\t\t\t.page-url {\n\t\t\t\tflex: 1;\n\t\t\t\twhite-space: nowrap;\n\t\t\t\toverflow: hidden;\n\t\t\t\ttext-overflow: ellipsis;\n\t\t\t}\n\n\t\t\t.page-value {\n\t\t\t\twidth: 120px;\n\t\t\t\ttext-align: right;\n\t\t\t\tfont-weight: 600;\n\t\t\t}\n\t\t}\n\t}\n}\n</style>\n","<script setup lang=\"ts\">\nimport { ref, computed } from 'vue'\nimport type { ResourceError } from '../../api'\nimport { formatDate } from '../../utils'\n\ninterface Props {\n  data: ResourceError[]\n  loading: boolean\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  data: () => [],\n  loading: false\n})\n\n// 格式化URL显示\nconst formatUrl = (url: string) => {\n  // 如果URL过长，截断显示\n  const maxLength = 40\n  if (url.length > maxLength) {\n    return url.substring(0, maxLength) + '...'\n  }\n  return url\n}\n\n// 格式化时间显示\nconst formatTime = (timestamp: string) => {\n  return formatDate(new Date(timestamp), 'YYYY-MM-DD HH:mm:ss')\n}\n\n// 获取标签类型的图标\nconst getTagIcon = (tagName: string) => {\n  const iconMap: Record<string, string> = {\n    'script': 'Document',\n    'link': 'Link',\n    'img': 'Picture',\n    'video': 'VideoPlay',\n    'audio': 'Headset',\n    'iframe': 'Monitor'\n  }\n  \n  return iconMap[tagName.toLowerCase()] || 'Document'\n}\n\n// 获取错误类型的标签类型\nconst getErrorTypeTag = (type: string) => {\n  if (type.includes('404')) return 'danger'\n  if (type.includes('ERR_CONNECTION')) return 'warning'\n  if (type.includes('TIMEOUT')) return 'warning'\n  if (type.includes('CERT')) return 'info'\n  return 'info'\n}\n</script>\n\n<template>\n  <el-card class=\"resource-errors-card\">\n    <template #header>\n      <div class=\"card-header\">\n        <span class=\"title\">资源加载错误</span>\n      </div>\n    </template>\n    \n    <div v-if=\"loading\" class=\"loading-container\">\n      <el-skeleton animated :rows=\"5\" />\n    </div>\n    \n    <div v-else-if=\"data.length === 0\" class=\"empty-container\">\n      <el-empty description=\"暂无数据\" :image-size=\"80\" />\n    </div>\n    \n    <el-table v-else :data=\"data\" style=\"width: 100%\" size=\"large\">\n      <el-table-column label=\"资源类型\" width=\"80\">\n        <template #default=\"{ row }\">\n          <el-tooltip :content=\"row.tagName\" placement=\"top\">\n            <el-icon :size=\"20\">\n              <component :is=\"getTagIcon(row.tagName)\" />\n            </el-icon>\n          </el-tooltip>\n        </template>\n      </el-table-column>\n      \n      <el-table-column label=\"资源URL\" min-width=\"200\">\n        <template #default=\"{ row }\">\n          <el-tooltip :content=\"row.url\" placement=\"top\" :show-after=\"500\">\n            <span class=\"url-text\">{{ formatUrl(row.url) }}</span>\n          </el-tooltip>\n        </template>\n      </el-table-column>\n      \n      <el-table-column label=\"错误类型\" min-width=\"180\">\n        <template #default=\"{ row }\">\n          <el-tag :type=\"getErrorTypeTag(row.type)\" size=\"small\">\n            {{ row.type }}\n          </el-tag>\n        </template>\n      </el-table-column>\n      \n      <el-table-column label=\"状态码\" width=\"100\" align=\"center\">\n        <template #default=\"{ row }\">\n          <span v-if=\"row.status\">{{ row.status }}</span>\n          <span v-else>-</span>\n        </template>\n      </el-table-column>\n      \n      <el-table-column label=\"发生时间\" min-width=\"180\">\n        <template #default=\"{ row }\">\n          {{ formatTime(row.timestamp) }}\n        </template>\n      </el-table-column>\n    </el-table>\n  </el-card>\n</template>\n\n<style scoped lang=\"less\">\n.resource-errors-card {\n  height: 100%;\n  \n  .card-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    \n    .title {\n      font-size: 16px;\n      font-weight: 600;\n    }\n  }\n  \n  .loading-container, .empty-container {\n    min-height: 250px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n  \n  .url-text {\n    display: inline-block;\n    max-width: 100%;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n}\n</style>\n","<script setup lang=\"ts\">\nimport { ref, onMounted, watch } from 'vue'\nimport { useAppStore } from '../../store/app'\nimport { getPerformanceSummary, getSlowPages, getResourceErrors } from '../../api'\nimport { ElMessage } from 'element-plus'\nimport PerformanceMetricCard from '../../components/performance/PerformanceMetricCard.vue'\nimport SlowPagesList from '../../components/performance/SlowPagesList.vue'\nimport ResourceErrorsList from '../../components/performance/ResourceErrorsList.vue'\nimport TimeRangeSelector from '@/components/common/TimeRangeSelector.vue'\n\nconst appStore = useAppStore()\n\n// 性能指标数据\nconst performanceData = ref({\n\tlcp: {\n\t\tavg: 0,\n\t\tp75: 0,\n\t},\n\tfcp: {\n\t\tavg: 0,\n\t\tp75: 0,\n\t},\n})\n\n// 慢页面数据\nconst slowPagesData = ref([])\nconst selectedMetric = ref('lcp')\n\n// 资源错误数据\nconst resourceErrorsData = ref([])\n\n// 加载状态\nconst loading = ref({\n\tperformance: false,\n\tslowPages: false,\n\tresourceErrors: false,\n})\n\n// 加载性能指标数据\nconst loadPerformanceData = async () => {\n\tloading.value.performance = true\n\tconsole.log('加载性能指标数据...')\n\tconsole.log('应用ID:', appStore.appId)\n\tconsole.log('开始时间:', appStore.startTime)\n\tconsole.log('结束时间:', appStore.endTime)\n\n\ttry {\n\t\tconst data = await getPerformanceSummary(appStore.appId, appStore.startTime, appStore.endTime)\n\t\tconsole.log('性能指标数据:', data)\n\t\tperformanceData.value = data\n\t} catch (error) {\n\t\tconsole.error('加载性能指标数据失败:', error)\n\t\tElMessage.error('加载性能指标数据失败')\n\t} finally {\n\t\tloading.value.performance = false\n\t}\n}\n\n// 加载慢页面数据\nconst loadSlowPagesData = async () => {\n\tloading.value.slowPages = true\n\tconsole.log('加载慢页面数据...')\n\tconsole.log('指标类型:', selectedMetric.value)\n\n\ttry {\n\t\tconst data = await getSlowPages(appStore.appId, appStore.startTime, appStore.endTime, selectedMetric.value, 5)\n\t\tconsole.log('慢页面数据:', data)\n\t\tslowPagesData.value = data\n\t} catch (error) {\n\t\tconsole.error('加载慢页面数据失败:', error)\n\t\tElMessage.error('加载慢页面数据失败')\n\t} finally {\n\t\tloading.value.slowPages = false\n\t}\n}\n\n// 加载资源错误数据\nconst loadResourceErrorsData = async () => {\n\tloading.value.resourceErrors = true\n\tconsole.log('加载资源错误数据...')\n\n\ttry {\n\t\tconst data = await getResourceErrors(appStore.appId, appStore.startTime, appStore.endTime, 10)\n\t\tconsole.log('资源错误数据:', data)\n\t\tresourceErrorsData.value = data\n\t} catch (error) {\n\t\tconsole.error('加载资源错误数据失败:', error)\n\t\tElMessage.error('加载资源错误数据失败')\n\t} finally {\n\t\tloading.value.resourceErrors = false\n\t}\n}\n\n// 刷新所有数据\nconst refreshAllData = () => {\n\tloadPerformanceData()\n\tloadSlowPagesData()\n\tloadResourceErrorsData()\n}\n\n// 处理时间范围变化\nconst handleTimeRangeChange = () => {\n\tconsole.log('时间范围变化:', appStore.timeRange)\n\tconsole.log('新的开始时间:', appStore.startTime)\n\tconsole.log('新的结束时间:', appStore.endTime)\n\trefreshAllData()\n}\n\n// 处理指标类型变化\nconst handleMetricChange = (metric: string) => {\n\tconsole.log('指标类型变化:', metric)\n\tselectedMetric.value = metric\n\tloadSlowPagesData()\n}\n\n// 监听应用ID变化\nwatch(\n\t() => appStore.appId,\n\t(newAppId, oldAppId) => {\n\t\tif (newAppId !== oldAppId) {\n\t\t\tconsole.log('应用ID变化:', newAppId)\n\t\t\trefreshAllData()\n\t\t}\n\t},\n)\n\nonMounted(() => {\n\tconsole.log('Performance页面已挂载')\n\trefreshAllData()\n})\n</script>\n\n<template>\n\t<div class=\"performance-container\">\n\t\t<div class=\"performance-header\">\n\t\t\t<h2 class=\"page-title\">性能概览</h2>\n\t\t\t<p class=\"page-description\">查看和分析应用的核心性能指标</p>\n\t\t</div>\n\n\t\t<!-- 时间范围选择器 -->\n\t\t<el-row class=\"time-filter\">\n\t\t\t<TimeRangeSelector @change=\"handleTimeRangeChange\" />\n\t\t</el-row>\n\n\t\t<!-- 核心性能指标卡片 -->\n\t\t<el-row :gutter=\"20\" class=\"metric-cards\">\n\t\t\t<el-col :xs=\"24\" :sm=\"12\">\n\t\t\t\t<PerformanceMetricCard\n\t\t\t\t\ttitle=\"LCP (最大内容绘制)\"\n\t\t\t\t\t:avg-value=\"performanceData.lcp.avg\"\n\t\t\t\t\t:p75-value=\"performanceData.lcp.p75\"\n\t\t\t\t\ticon=\"Timer\"\n\t\t\t\t\tcolor=\"#E6A23C\"\n\t\t\t\t\t:loading=\"loading.performance\"\n\t\t\t\t\t:threshold=\"{ good: 2500, needsImprovement: 4000 }\" />\n\t\t\t</el-col>\n\t\t\t<el-col :xs=\"24\" :sm=\"12\">\n\t\t\t\t<PerformanceMetricCard\n\t\t\t\t\ttitle=\"FCP (首次内容绘制)\"\n\t\t\t\t\t:avg-value=\"performanceData.fcp.avg\"\n\t\t\t\t\t:p75-value=\"performanceData.fcp.p75\"\n\t\t\t\t\ticon=\"PictureFilled\"\n\t\t\t\t\tcolor=\"#409EFF\"\n\t\t\t\t\t:loading=\"loading.performance\"\n\t\t\t\t\t:threshold=\"{ good: 1000, needsImprovement: 2500 }\" />\n\t\t\t</el-col>\n\t\t</el-row>\n\n\t\t<!-- 慢页面列表和资源错误列表 -->\n\t\t<el-row :gutter=\"20\" class=\"data-lists\">\n\t\t\t<el-col :xs=\"24\" :lg=\"12\">\n\t\t\t\t<SlowPagesList\n\t\t\t\t\t:data=\"slowPagesData\"\n\t\t\t\t\t:loading=\"loading.slowPages\"\n\t\t\t\t\t:metric=\"selectedMetric\"\n\t\t\t\t\t@update:metric=\"handleMetricChange\" />\n\t\t\t</el-col>\n\t\t\t<el-col :xs=\"24\" :lg=\"12\">\n\t\t\t\t<ResourceErrorsList :data=\"resourceErrorsData\" :loading=\"loading.resourceErrors\" />\n\t\t\t</el-col>\n\t\t</el-row>\n\t</div>\n</template>\n\n<style scoped lang=\"less\">\n.performance-container {\n\tpadding: 20px;\n\n\t.performance-header {\n\t\tmargin-bottom: 20px;\n\n\t\t.page-title {\n\t\t\tmargin: 0 0 10px 0;\n\t\t\tfont-size: 24px;\n\t\t\tfont-weight: 600;\n\t\t\tcolor: #303133;\n\t\t}\n\n\t\t.page-description {\n\t\t\tmargin: 0;\n\t\t\tfont-size: 14px;\n\t\t\tcolor: #606266;\n\t\t}\n\t}\n\n\t.time-filter {\n\t\tmargin-bottom: 20px;\n\t}\n\n\t.metric-cards {\n\t\tmargin-bottom: 20px;\n\t}\n\n\t.data-lists {\n\t\tmargin-bottom: 20px;\n\t}\n\n\t/* 响应式调整 */\n\t@media (max-width: 768px) {\n\t\t.metric-cards > .el-col {\n\t\t\tmargin-bottom: 20px;\n\t\t}\n\n\t\t.data-lists > .el-col {\n\t\t\tmargin-bottom: 20px;\n\t\t}\n\t}\n}\n</style>\n"],"names":["props","__props","formatValue","value","formatPerformanceTime","getStatusColor","avgStatusColor","computed","p75StatusColor","emit","__emit","metricNames","currentMetricName","metric","thresholds","threshold","formatUrl","url","formatTime","timestamp","formatDate","getTagIcon","tagName","getErrorTypeTag","type","appStore","useAppStore","performanceData","ref","slowPagesData","selectedMetric","resourceErrorsData","loading","loadPerformanceData","data","getPerformanceSummary","error","ElMessage","loadSlowPagesData","getSlowPages","loadResourceErrorsData","getResourceErrors","refreshAllData","handleTimeRangeChange","handleMetricChange","watch","newAppId","oldAppId","onMounted"],"mappings":"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"}